@using VivesRental.Enums
@model IndexPaginaDetails
@{
    ViewData["Title"] = "Home Page";
}
@section homepageshare
{
    <partial name="homepageshare"/>
}

<div class="text-center">
    <h1 class="titelke notselectable"><span class="redtext">VIVES</Span><span class="bluetext">Rental</span></h1>
    
</div>
<div class="container">
    <div class="row">
        <div class="col-lg-3 col-md-6  col-sm-12 boxke">
            <div class="blockText"> <h1 class="text-center titletext notselectable">Customers</h1>
                <p class="text-center text-white notselectable">Amount: <span class="fw-bold">@Model.Customers.Count </span></p>
                <p class="text-center text-white notselectable">Total orders: @{
                                                              var totalOrders = 0;
                                                              foreach (var customer in Model.Customers)
                                                              {
                                                                  totalOrders += customer.NumberOfOrders;
                                                              }
                                                                        <span class="fw-bold"> @totalOrders </span>
                                                          }</p>
                <div class="text-center">
                    <button class="boxke hoverbutton"><a class="nav-link text-dark notselectable" asp-area="" asp-controller="CustomerManagement" asp-action="index">Customer-Menu</a></button>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 boxke">
            <div class="blockText"> <h1 class="text-center titletext notselectable">Products</h1>
                <p class="text-center text-white notselectable">Amount: <span class="fw-bold">@Model.Products.Count</span> </p>
                <p class="text-center text-white notselectable">Most articles: 
                    @{
                        var elsee = 0;
                    var productWithMostArticles = Model.Products.OrderByDescending(p => p.NumberOfArticles).FirstOrDefault();
                    if (productWithMostArticles != null)
                    {
                        <span class="fw-bold"> @productWithMostArticles.Name </span>
                        ;
                    }       
                    else
                    {
                        <span class="fw-bold"> @elsee </span>
                    }
                }
                    </p>
                <div class="text-center">
                    <button class="boxke hoverbutton"><a class="nav-link text-dark notselectable" asp-area="" asp-controller="Product" asp-action="index">Product-Menu</a></button>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 boxke">
            <div class="blockText">
                <h1 class="text-center titletext notselectable">Articles</h1>
                <p class="text-center text-white notselectable">Amount: <span class="fw-bold">@Model.Articles.Count</span> </p> 
                <p class="text-center text-white notselectable">Available for rent: <span class="fw-bold">@{
                                                                                                         var normalArticleCount = Model.Articles.Count(a => a.Status == ArticleStatus.Normal);
                                                                                                         @normalArticleCount
                                                                                                     }</span> </p>
                <div class="text-center">
                    <button class="boxke hoverbutton"><a class="nav-link text-dark notselectable" asp-area="" asp-controller="Article" asp-action="index">Article-Menu</a></button>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 boxke">
            <div class="blockText">
                <h1 class="text-center titletext notselectable">Rents</h1>
                <p class="text-center text-white notselectable">Amount: <span class="fw-bold">@Model.Orderlines.Count</span> </p>
                <p class="text-center text-white notselectable">Ongoing rents: <span class="fw-bold">
                    @{
                        var rented = Model.Orderlines.Where(o => o.ReturnedAt == null);
                        if (rented.Count() > 0)
                        {
                            @rented.Count();
                            
                        }
                        else
                        {
                            int nul = 0;
                            @nul;
                        }
                    }
                </span> </p>
                <div class="text-center">
                    <button class="boxke hoverbutton"><a class="nav-link text-dark notselectable" asp-area="" asp-controller="Home" asp-action="Rent">Rent-Menu</a></button>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 boxke">
            <div class="blockText">
                <h1 class="text-center titletext notselectable">Returns</h1>
                <p class="text-center text-white notselectable">Amount: <span class="fw-bold"> @{
                                                                                                   var returnedCount = Model.Orderlines.Count(o => o.ReturnedAt != null);
                                                                                                   @returnedCount;
                                                                                               }</span> </p>
                <p class="text-center text-white notselectable">Closest to expire: <span class="fw-bold">
                    @{
                        var closestToExpire = Model.Orderlines.OrderBy(o => o.ExpiresAt).Where(o=> o.ReturnedAt==null).FirstOrDefault();
                        @if (closestToExpire != null)
                        {
                            @closestToExpire.ExpiresAt.ToString("dd-MM-yyyy");
                        }
                    }
                </span> </p>
                <div class="text-center">
                    <button class="boxke hoverbutton"><a class="nav-link text-dark notselectable" asp-area="" asp-controller="Home" asp-action="Return">Return-Menu</a></button>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 boxke">
            <div class="blockText">
                <h1 class="text-center titletext notselectable">Orders</h1>
                <p class="text-center text-white notselectable">Amount: <span class="fw-bold"> @{
                                                                                                   var orders = Model.Orders.Count;
                                                                                                   @orders;
                                                                                               }</span> </p>
                <p class="text-center text-white notselectable">Biggest customer: <span class="fw-bold">
                    @{
                        var customerWithMostOrders = Model.Orders
                            .GroupBy(o => new { o.CustomerFirstName, o.CustomerLastName })
                            .OrderByDescending(g => g.Count())
                            .FirstOrDefault();
                        if (customerWithMostOrders != null)
                        {
                            @($"{customerWithMostOrders.Key.CustomerFirstName} {customerWithMostOrders.Key.CustomerLastName}");
                        }
                        
                    }
                </span> </p>
                <div class="text-center">
                    <button class="boxke hoverbutton"><a class="nav-link text-dark notselectable" asp-area="" asp-controller="Order" asp-action="Index">Orders-Menu</a></button>
                </div>
            </div>
        </div>
    </div>
</div>
